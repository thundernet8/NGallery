version: "2"

services:
  redis:
    restart: always
    image: redis:latest
    ports:
      - "6379"
    volumes:
      - /Users/WXQ/Desktop/NGallery/Volumes/redis/data:/data
    networks:
      - front-tier
  mongo:
    restart: always
    image: mongo:latest
    ports:
      - "27017"
    networks:
      - front-tier
    volumes:
      - /Users/WXQ/Desktop/NGallery/Volumes/mongodb/db:/data/db
      - /Users/WXQ/Desktop/NGallery/Volumes/mongodb/configdb:/data/configdb
  api-node:
    build:
      context: ./NGallery-API
      dockerfile: Dockerfile
    restart: always
    links:
      - redis
      - mongo
    ports:
      - "8080"
    networks:
      - front-tier
    volumes:
      - /Users/WXQ/Desktop/NGallery/NGallery-API:/src
      - /Users/WXQ/Desktop/NGallery/.npm:/root/.npm

  account-node:
    build:
      context: ./NGallery-AccountsCenter
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080"
    networks:
      - front-tier
    links:
      - api-node
    volumes:
      - /Users/WXQ/Desktop/NGallery/NGallery-AccountsCenter:/src
      - /Users/WXQ/Desktop/NGallery/.npm:/root/.npm

  client-node:
    build:
      context: ./NGallery-Client
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080"
    networks:
      - front-tier
    links:
      - api-node
    volumes:
      - /Users/WXQ/Desktop/NGallery/NGallery-Client:/src
      - /Users/WXQ/Desktop/NGallery/.npm:/root/.npm
  
  nginx:
    build: ./Nginx
    restart: always
    networks:
      - front-tier
    links:
      - api-node
      - account-node
      - client-node
    volumes:
      - /Users/WXQ/Desktop/NGallery:/home
    ports:
      - "80:80"

networks:
  front-tier:
    driver: bridge